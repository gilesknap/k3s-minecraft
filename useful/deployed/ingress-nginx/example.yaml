# this basic example sets up an nginx server with ingress via gknuc.local
# replace gknuc.local with a DNS name for a worker node in your cluster
---
kind: Namespace
apiVersion: v1
metadata:
  name: test
  labels:
    name: test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-nginx-app
  namespace: test
spec:
  selector:
    matchLabels:
      name: test-nginx-backend
  template:
    metadata:
      labels:
        name: test-nginx-backend
    spec:
      containers:
        - name: backend
          image: docker.io/nginx:alpine
          imagePullPolicy: Always
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: test-nginx-service
  namespace: test
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    name: test-nginx-backend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-nginx-ingress
  namespace: test
  annotations:
    # do not attempt to redirect to :443 since test does not support this
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # remove the '/test' from the target passed to nginx
    nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  ingressClassName: nginx
  rules:
  # a local dns name for one of my worker nodes 
  - host: gknuc.local
    http:
      paths:
        - path: /test
          pathType: Prefix
          backend:
            service:
              name: test-nginx-service
              port:
                number: 80        
  # a public dns name for one of my worker nodes    
  - host: gilesk.ddns.net
    http:
      paths:
        - path: /test
          pathType: Prefix
          backend:
            service:
              name: test-nginx-service
              port:
                number: 80
                
