# This is value overrides for the helm chart defined here
# https://artifacthub.io/packages/helm/minecraft-server-charts/minecraft

# to use this file
# helm repo add minecraft-server-charts https://itzg.github.io/minecraft-server-charts/
# helm upgrade --install WORLD_NAME -f THIS_FILE.yaml --set minecraftServer.eula=true,rcon.password=YOUR_PWD minecraft-server-charts/minecraft

# this is where I store world backups so mount it read-only in order to start a new
# server from a backup
imagePullSecret: regcred
extraVolumes:
  # define where the volume mounts in the container
  - volumeMounts:
      - name: bigdisk
        mountPath: /share/bigdisk
        readOnly: true
    # define the remote nfs mount to attach to above
    volumes:
      - name: bigdisk
        nfs:
          server: 192.168.0.20
          path: /share/bigdisk

minecraftServer:
  # enable rcon for remote control - set to false if not required
  rcon:
    # external port must be unique across all mc server instances
    nodePort: 30801
    serviceType: NodePort
    enabled: true
    password: "TODO - supply this as an override on the command line "
  # Noahs friends get access, Noah and I get ops
  whitelist: TransformerScorn,DispenserAD11,Bigbob2,JJ33Mine,destroyerSB737
  ops: TransformerScorn
  # always set game mode when a player connects
  forcegameMode: true
  levelSeed:
  maxWorldSize: 29999984
  gameMode: adventure
  motd: "Devils Deep"
  pvp: false
  # this means you get the node IP address on K3s
  serviceType: NodePort
  # restore the world from a backup on first execution
  downloadWorldUrl: /share/bigdisk/minecraft-k8s-backup/2021-05-15-21:58:22-devils-deep.zip
  # external port must be unique across all mc server instances
  nodePort: 30800
  memory: 5g

# kubernetes memory/cpu reservation/limits
resources:
  requests:
    memory: 5Gi
    cpu: 1
  limits:
    memory: 6Gi
    cpu: 8


extraEnv:
  # recommended rolling logs for saving disk
  ENABLE_ROLLING_LOGS: true
  # if this is true then minecraftServer properties above are always applied
  # on restart, if false they only apply at first run
  OVERRIDE_SERVER_PROPERTIES: false
  # if this is true then downloadWorldUrl is always loaded on restart
  # useful for resetting the world but should be reset to false afterwards
  FORCE_WORLD_COPY: false

# required to save the world in persistant local-path storage (k3s default Storage Class)
# by deafult this goes in /var/lib/rancher/k3s/storage on the executing node
# NOTE this ties the deployment to the first node it goes to
# we could perhaps use an NFS mount to avoid this
persistence:
  storageClass: nfs-storageclass
  annotations: {}
  dataDir:
    enabled: true
    Size: 1Gi

# choose the node to run on (delete if not needed)
nodeSelector:
  kubernetes.io/hostname: gknuc
